@model H2StyleStore.Models.ViewModels.CreateVideoVM

@{
    ViewBag.Title = "CreateVideo";
    var videoCategories = ViewBag.VideoCategoryItems as IEnumerable<SelectListItem>;
}

<h2>CreateVideo</h2>


@using (Html.BeginForm("CreateVideo", "Video", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>CreateVideoVM</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    @{
        string OnShelffTime = string.Empty;
        //if (Model.OffShelffTime.HasValue)
        //{
        //    OnShelffTime = Model.OnShelffTime.Value.ToString("yyyy-MM-dd");
        //}

    }
    <div class="form-group">
        @Html.LabelFor(model => model.OnShelffTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input class="form-control" type="datetime-local" value="@OnShelffTime" name="OnShelffTime" />
            @*@Html.EditorFor(model => model.OnShelffTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OnShelffTime, "", new { @class = "text-danger" })*@
        </div>
    </div>
    @{
        string OffShelffTime = string.Empty;
    }
    <div class="form-group">
        @Html.LabelFor(model => model.OffShelffTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input class="form-control" type="datetime-local" value="@OffShelffTime" name="OffShelffTime" />
            @*@Html.EditorFor(model => model.OffShelffTime, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.OffShelffTime, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(c => c.CategoryId, videoCategories, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2" for="File">上傳影片檔案</label>
        <div class="col-md-10">
            <input type="file" name="videoFile" clss="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="File">上傳圖片檔案</label>
        <div class="col-md-10">
            <input type="file" name="imageFile" clss="form-control" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
